# Generated by Django 3.0.7 on 2021-03-03 04:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, default=True, help_text='Friendly name, used as index for security reasons, use dashes instead of spaces, avoid special characters and use an URL-friendly name', max_length=128, null=True)),
                ('allow', models.BooleanField(default=True, help_text='Allow patching or not')),
                ('force_start', models.BooleanField(default=False, help_text='Should patcher ignore everything else and finish patch immediately?')),
                ('policy_msg', models.TextField(blank=True, default='Under maintenance', help_text='if the patcher is ignoring updates, what message should appear?')),
                ('file_url', models.TextField(default='http://domain.com/patch/data/', help_text='http://domain.com/patch/data/')),
                ('client_sum', models.TextField(blank=True, default='', help_text='use CheckSum tool, hash for client & patcher used to make sure exe is up to date (leave empty to disable this feature)')),
                ('patcher_sum', models.TextField(blank=True, default='', help_text='use CheckSum tool, hash for client & patcher used to make sure exe is up to date (leave empty to disable this feature)')),
                ('client_path', models.CharField(blank=True, default='', help_text='This is compressed file for patcher & client update, for example client.thor', max_length=128)),
                ('patcher_path', models.CharField(blank=True, default='', help_text='This is compressed file for patcher & client update, for example patcher.thor', max_length=128)),
                ('fragment_limit', models.SmallIntegerField(default=50, help_text='Set a limit for fragment, when reach this limit, patcher will ask user to defrag')),
            ],
            options={
                'unique_together': {('patcher_path', 'name'), ('client_path', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('filename', models.CharField(help_text='.thor filename', max_length=128)),
                ('patcher', models.ForeignKey(help_text='Patch client that will receive the update', on_delete=django.db.models.deletion.CASCADE, to='thor.Patcher')),
            ],
            options={
                'unique_together': {('filename', 'patcher')},
            },
        ),
        migrations.CreateModel(
            name='CustomClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=True, help_text='_Name - Filename of exe', max_length=128, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('checksum', models.CharField(default=None, help_text='_sum - checksum, use CheckSum tool.', max_length=128)),
                ('path', models.CharField(blank=True, default=None, help_text='.thor _Path - Path for file [Compressed]', max_length=128)),
                ('patcher', models.ForeignKey(help_text='Patch client that will perform these file checks', on_delete=django.db.models.deletion.CASCADE, to='thor.Patcher')),
            ],
            options={
                'unique_together': {('path', 'patcher')},
            },
        ),
    ]
